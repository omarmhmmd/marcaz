var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {enumerable: true, configurable: true, writable: true, value}) : obj[key] = value;
var __assign = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __rest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  return __exportStar(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? {get: () => module2.default, enumerable: true} : {value: module2, enumerable: true})), module2);
};
__markAsModule(exports);
__export(exports, {
  Popover: () => Popover
});
var import_popper_max_size_modifier = __toModule(require("popper-max-size-modifier"));
var import_react = __toModule(require("react"));
var import_react_popper = __toModule(require("react-popper"));
var import_styled_components = __toModule(require("styled-components"));
var import_constants = __toModule(require("../../constants"));
var import_hooks = __toModule(require("../../hooks"));
var import_utils = __toModule(require("../../utils"));
var import_card = __toModule(require("../card"));
var import_styles = __toModule(require("../container/styles"));
var import_arrow2 = __toModule(require("./arrow"));
var import_applyMaxSize = __toModule(require("./modifiers/applyMaxSize"));
var import_matchReferenceWidth = __toModule(require("./modifiers/matchReferenceWidth"));
const Root = (0, import_styled_components.default)(import_utils.Layer)(({$preventOverflow}) => import_styled_components.css`
    pointer-events: none;
    display: flex;
    flex-direction: column;

    & > * {
      min-height: 0;
    }

    /* Hide the popover when the reference element is out of bounds */
    ${$preventOverflow && import_styled_components.css`
      &[data-popper-reference-hidden='true'] {
        display: none;
      }
    `}
  `);
const PopoverCard = (0, import_styled_components.default)(import_card.Card)(({$constrainSize}) => import_styled_components.css`
    flex: 1;
    max-height: ${$constrainSize && "100%"};
    pointer-events: all;

    && {
      display: flex;
    }

    flex-direction: column;

    & > * {
      min-height: 0;
    }

    ${import_styles.responsiveContainerWidthStyle}
  `);
const Popover = (0, import_react.forwardRef)((props, ref) => {
  const boundaryElementContext = (0, import_utils.useBoundaryElement)();
  const {
    allowedAutoPlacements,
    arrow = true,
    boundaryElement: boundaryElementProp = boundaryElementContext,
    children: child,
    content,
    constrainSize,
    disabled,
    fallbackPlacements,
    open,
    padding,
    placement: placementProp,
    portal: portalProp = false,
    preventOverflow,
    radius = 3,
    referenceElement: referenceElementProp,
    matchReferenceWidth,
    shadow = 3,
    scheme,
    style = import_constants.EMPTY_RECORD,
    tone,
    width = 0
  } = props, restProps = __rest(props, [
    "allowedAutoPlacements",
    "arrow",
    "boundaryElement",
    "children",
    "content",
    "constrainSize",
    "disabled",
    "fallbackPlacements",
    "open",
    "padding",
    "placement",
    "portal",
    "preventOverflow",
    "radius",
    "referenceElement",
    "matchReferenceWidth",
    "shadow",
    "scheme",
    "style",
    "tone",
    "width"
  ]);
  const forwardedRef = (0, import_hooks.useForwardedRef)(ref);
  const placement = typeof placementProp === "string" ? placementProp : "bottom";
  const portal = (0, import_utils.usePortal)();
  const boundaryElement = boundaryElementProp || portal.boundaryElement;
  const [referenceElement, setReferenceElement] = (0, import_react.useState)(null);
  const [popperElement, setPopperElement] = (0, import_react.useState)(null);
  const [arrowElement, setArrowElement] = (0, import_react.useState)(null);
  const popperReferenceElement = referenceElementProp || referenceElement;
  const offset = (0, import_react.useMemo)(() => arrow ? [0, 4] : [0, 0], [arrow]);
  const modifiers = (0, import_react.useMemo)(() => [
    constrainSize && __assign(__assign({}, import_popper_max_size_modifier.default), {
      options: {
        boundary: boundaryElement || void 0,
        padding: 8
      }
    }),
    constrainSize && import_applyMaxSize.applyMaxSizeModifier,
    arrow && {
      name: "arrow",
      options: {
        element: arrowElement,
        padding: 4
      }
    },
    preventOverflow && {
      name: "preventOverflow",
      options: {
        altAxis: true,
        boundary: boundaryElement || void 0,
        padding: 8
      }
    },
    {
      name: "offset",
      options: {offset}
    },
    {
      name: "flip",
      options: {
        allowedAutoPlacements,
        boundary: boundaryElement || void 0,
        fallbackPlacements,
        padding: 8
      }
    },
    matchReferenceWidth && import_matchReferenceWidth.matchReferenceWidthModifier
  ].filter(Boolean), [
    allowedAutoPlacements,
    arrow,
    arrowElement,
    boundaryElement,
    constrainSize,
    fallbackPlacements,
    matchReferenceWidth,
    offset,
    preventOverflow
  ]);
  const popper = (0, import_react_popper.usePopper)(popperReferenceElement, popperElement, {
    placement,
    modifiers
  });
  const {attributes, forceUpdate, styles} = popper;
  (0, import_react.useEffect)(() => {
    if (forceUpdate) {
      try {
        forceUpdate();
      } catch (_) {
      }
    }
  }, [content, forceUpdate, open, popperReferenceElement]);
  if (disabled) {
    return child || /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null);
  }
  const setRef = (el) => {
    const childRef = child.ref;
    setReferenceElement(el);
    if (typeof childRef === "function") {
      childRef(el);
    } else if (childRef) {
      childRef.current = el;
    }
  };
  const setRootRef = (el) => {
    setPopperElement(el);
    forwardedRef.current = el;
  };
  const popoverStyle = __assign(__assign({}, style), styles.popper);
  const node = /* @__PURE__ */ import_react.default.createElement(Root, __assign(__assign(__assign({
    "data-ui": "Popover"
  }, restProps), {
    $preventOverflow: preventOverflow,
    ref: setRootRef,
    style: popoverStyle
  }), attributes.popper), /* @__PURE__ */ import_react.default.createElement(PopoverCard, {
    $constrainSize: constrainSize,
    "data-ui": "PopoverCard",
    padding,
    radius,
    scheme,
    shadow,
    tone,
    width
  }, arrow && /* @__PURE__ */ import_react.default.createElement(import_arrow2.PopoverArrow, {
    ref: setArrowElement,
    style: styles.arrow
  }), content));
  return /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null, child && !referenceElementProp ? (0, import_react.cloneElement)(child, {ref: setRef}) : child || /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null), open && /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null, portalProp && /* @__PURE__ */ import_react.default.createElement(import_utils.Portal, null, node), !portalProp && node));
});
Popover.displayName = "Popover";
