var __defProp = Object.defineProperty;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {enumerable: true, configurable: true, writable: true, value}) : obj[key] = value;
var __assign = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __rest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
import {CloseIcon} from "@sanity/icons";
import React from "react";
import styled from "styled-components";
import {Box, Card, Flex, Stack, Text} from "../../primitives";
const STATUS_CARD_TONE = {
  error: "critical",
  warning: "caution",
  success: "positive",
  info: "primary"
};
const Root = styled(Card)`
  pointer-events: all;
`;
function Toast(props) {
  const {closable, description, onClose, title, status} = props, restProps = __rest(props, ["closable", "description", "onClose", "title", "status"]);
  const cardTone = status ? STATUS_CARD_TONE[status] : "default";
  return /* @__PURE__ */ React.createElement(Root, __assign(__assign({
    "data-ui": "Toast"
  }, restProps), {
    marginTop: 3,
    padding: 1,
    radius: 2,
    shadow: 2,
    tone: cardTone
  }), /* @__PURE__ */ React.createElement(Flex, null, /* @__PURE__ */ React.createElement(Box, {
    flex: 1,
    padding: 2
  }, /* @__PURE__ */ React.createElement(Stack, {
    space: 3
  }, title && /* @__PURE__ */ React.createElement(Text, {
    weight: "semibold"
  }, title), description && /* @__PURE__ */ React.createElement(Text, {
    muted: true,
    size: 1
  }, description))), closable && /* @__PURE__ */ React.createElement(Box, {
    marginLeft: 2
  }, /* @__PURE__ */ React.createElement(Card, {
    as: "button",
    padding: 2,
    onClick: onClose,
    radius: 2,
    tone: cardTone,
    style: {verticalAlign: "top"}
  }, /* @__PURE__ */ React.createElement(Text, null, /* @__PURE__ */ React.createElement(CloseIcon, null))))));
}
export {
  Toast
};
