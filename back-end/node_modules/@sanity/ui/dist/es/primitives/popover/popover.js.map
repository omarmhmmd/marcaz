{
  "version": 3,
  "sources": ["../../../../src/primitives/popover/popover.tsx"],
  "sourcesContent": ["import {ArrowModifier} from '@popperjs/core/lib/modifiers/arrow'\nimport {FlipModifier} from '@popperjs/core/lib/modifiers/flip'\nimport {OffsetModifier} from '@popperjs/core/lib/modifiers/offset'\nimport {PreventOverflowModifier} from '@popperjs/core/lib/modifiers/preventOverflow'\nimport maxSizeModifier from 'popper-max-size-modifier'\nimport React, {cloneElement, forwardRef, useEffect, useMemo, useState} from 'react'\nimport {Modifier, usePopper} from 'react-popper'\nimport styled, {css} from 'styled-components'\nimport {EMPTY_RECORD} from '../../constants'\nimport {useForwardedRef} from '../../hooks'\nimport {ThemeColorSchemeKey, ThemeColorToneKey} from '../../theme'\nimport {Placement} from '../../types'\nimport {Layer, Portal, useBoundaryElement, usePortal} from '../../utils'\nimport {Card} from '../card'\nimport {ResponsiveWidthStyleProps} from '../container'\nimport {responsiveContainerWidthStyle} from '../container/styles'\nimport {ResponsiveRadiusProps, ResponsiveShadowProps, ResponsiveWidthProps} from '../types'\nimport {PopoverArrow} from './arrow'\nimport {applyMaxSizeModifier} from './modifiers/applyMaxSize'\nimport {matchReferenceWidthModifier} from './modifiers/matchReferenceWidth'\n\nexport interface PopoverProps\n  extends ResponsiveRadiusProps,\n    ResponsiveShadowProps,\n    ResponsiveWidthProps {\n  allowedAutoPlacements?: Placement[]\n  arrow?: boolean\n  boundaryElement?: HTMLElement | null\n  children?: React.ReactElement\n  constrainSize?: boolean\n  content?: React.ReactNode\n  disabled?: boolean\n  fallbackPlacements?: Placement[]\n  open?: boolean\n  padding?: number | number[]\n  placement?: Placement\n  portal?: boolean\n  preventOverflow?: boolean\n  referenceElement?: HTMLElement | null\n  matchReferenceWidth?: boolean\n  scheme?: ThemeColorSchemeKey\n  tone?: ThemeColorToneKey\n}\n\nconst Root = styled(Layer)<{$preventOverflow?: boolean}>(\n  ({$preventOverflow}) => css`\n    pointer-events: none;\n    display: flex;\n    flex-direction: column;\n\n    & > * {\n      min-height: 0;\n    }\n\n    /* Hide the popover when the reference element is out of bounds */\n    ${$preventOverflow &&\n    css`\n      &[data-popper-reference-hidden='true'] {\n        display: none;\n      }\n    `}\n  `\n)\n\nconst PopoverCard = styled(Card)<\n  ResponsiveWidthStyleProps & {\n    $constrainSize?: boolean\n    $preventOverflow?: boolean\n  }\n>(\n  ({$constrainSize}) => css`\n    flex: 1;\n    max-height: ${$constrainSize && '100%'};\n    pointer-events: all;\n\n    && {\n      display: flex;\n    }\n\n    flex-direction: column;\n\n    & > * {\n      min-height: 0;\n    }\n\n    ${responsiveContainerWidthStyle}\n  `\n)\n\nexport const Popover = forwardRef(\n  (\n    props: PopoverProps &\n      Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'content' | 'width'>,\n    ref\n  ) => {\n    const boundaryElementContext = useBoundaryElement()\n    const {\n      allowedAutoPlacements,\n      arrow = true,\n      boundaryElement: boundaryElementProp = boundaryElementContext,\n      children: child,\n      content,\n      constrainSize,\n      disabled,\n      fallbackPlacements,\n      open,\n      padding,\n      placement: placementProp,\n      portal: portalProp = false,\n      preventOverflow,\n      radius = 3,\n      referenceElement: referenceElementProp,\n      matchReferenceWidth,\n      shadow = 3,\n      scheme,\n      style = EMPTY_RECORD,\n      tone,\n      width = 0,\n      ...restProps\n    } = props\n    const forwardedRef = useForwardedRef(ref)\n    const placement = typeof placementProp === 'string' ? placementProp : 'bottom'\n    const portal = usePortal()\n    const boundaryElement = boundaryElementProp || portal.boundaryElement\n    const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(null)\n    const [popperElement, setPopperElement] = useState<HTMLElement | null>(null)\n    const [arrowElement, setArrowElement] = useState<HTMLElement | null>(null)\n    const popperReferenceElement = referenceElementProp || referenceElement\n    const offset = useMemo(() => (arrow ? [0, 4] : [0, 0]), [arrow])\n\n    const modifiers = useMemo(\n      () =>\n        [\n          constrainSize && {\n            ...maxSizeModifier,\n            options: {\n              boundary: boundaryElement || undefined,\n              padding: 8,\n            },\n          },\n          constrainSize && applyMaxSizeModifier,\n          arrow &&\n            ({\n              name: 'arrow',\n              options: {\n                element: arrowElement,\n                padding: 4,\n              },\n            } as ArrowModifier),\n          preventOverflow &&\n            ({\n              name: 'preventOverflow',\n              options: {\n                altAxis: true,\n                boundary: boundaryElement || undefined,\n                padding: 8,\n              },\n            } as PreventOverflowModifier),\n          {\n            name: 'offset',\n            options: {offset},\n          } as OffsetModifier,\n          {\n            name: 'flip',\n            options: {\n              allowedAutoPlacements,\n              boundary: boundaryElement || undefined,\n              fallbackPlacements,\n              padding: 8,\n            },\n          } as FlipModifier,\n          matchReferenceWidth && matchReferenceWidthModifier,\n        ].filter(Boolean) as Modifier<any, any>[],\n      [\n        allowedAutoPlacements,\n        arrow,\n        arrowElement,\n        boundaryElement,\n        constrainSize,\n        fallbackPlacements,\n        matchReferenceWidth,\n        offset,\n        preventOverflow,\n      ]\n    )\n\n    const popper = usePopper(popperReferenceElement, popperElement, {\n      placement,\n      modifiers,\n    })\n\n    const {attributes, forceUpdate, styles} = popper\n\n    useEffect(() => {\n      if (forceUpdate) {\n        try {\n          forceUpdate()\n        } catch (_) {\n          // ignore caught error\n        }\n      }\n    }, [content, forceUpdate, open, popperReferenceElement])\n\n    if (disabled) {\n      return child || <></>\n    }\n\n    const setRef = (el: HTMLElement | null) => {\n      const childRef = (child as any).ref\n\n      setReferenceElement(el)\n\n      if (typeof childRef === 'function') {\n        childRef(el)\n      } else if (childRef) {\n        childRef.current = el\n      }\n    }\n\n    const setRootRef = (el: HTMLDivElement | null) => {\n      setPopperElement(el)\n      forwardedRef.current = el\n    }\n\n    // @todo: memoize?\n    const popoverStyle = {...style, ...styles.popper}\n\n    const node = (\n      <Root\n        data-ui=\"Popover\"\n        {...restProps}\n        $preventOverflow={preventOverflow}\n        ref={setRootRef}\n        style={popoverStyle}\n        {...attributes.popper}\n      >\n        <PopoverCard\n          $constrainSize={constrainSize}\n          data-ui=\"PopoverCard\"\n          padding={padding}\n          radius={radius}\n          scheme={scheme}\n          shadow={shadow}\n          tone={tone}\n          width={width as any}\n        >\n          {arrow && <PopoverArrow ref={setArrowElement} style={styles.arrow} />}\n          {content}\n        </PopoverCard>\n      </Root>\n    )\n\n    return (\n      <>\n        {child && !referenceElementProp ? cloneElement(child, {ref: setRef}) : child || <></>}\n\n        {open && (\n          <>\n            {portalProp && <Portal>{node}</Portal>}\n\n            {!portalProp && node}\n          </>\n        )}\n      </>\n    )\n  }\n)\n\nPopover.displayName = 'Popover'\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAyBA,MAAM,OAAO,OAAO,OAClB,CAAC,CAAC,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUpB,oBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAQJ,MAAM,cAAc,OAAO,MAMzB,CAAC,CAAC,oBAAoB;AAAA;AAAA,kBAEN,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAa9B;AAAA;AAIC,MAAM,UAAU,WACrB,CACE,OAEA,QACG;AACH,QAAM,yBAAyB;AAC/B,QACE;AAAA;AAAA,IACA,QAAQ;AAAA,IACR,iBAAiB,sBAAsB;AAAA,IACvC,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW;AAAA,IACX,QAAQ,aAAa;AAAA,IACrB;AAAA,IACA,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB;AAAA,IACA,SAAS;AAAA,IACT;AAAA,IACA,QAAQ;AAAA,IACR;AAAA,IACA,QAAQ;AAAA,MAEN,OADC,mBACD,OADC;AAAA,IArBH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGF,QAAM,eAAe,gBAAgB;AACrC,QAAM,YAAY,OAAO,kBAAkB,WAAW,gBAAgB;AACtE,QAAM,SAAS;AACf,QAAM,kBAAkB,uBAAuB,OAAO;AACtD,QAAM,CAAC,kBAAkB,uBAAuB,SAA6B;AAC7E,QAAM,CAAC,eAAe,oBAAoB,SAA6B;AACvE,QAAM,CAAC,cAAc,mBAAmB,SAA6B;AACrE,QAAM,yBAAyB,wBAAwB;AACvD,QAAM,SAAS,QAAQ,MAAO,QAAQ,CAAC,GAAG,KAAK,CAAC,GAAG,IAAK,CAAC;AAEzD,QAAM,YAAY,QAChB,MACE;AAAA,IACE,iBAAiB,sBACZ,kBADY;AAAA,MAEf,SAAS;AAAA,QACP,UAAU,mBAAmB;AAAA,QAC7B,SAAS;AAAA;AAAA;AAAA,IAGb,iBAAiB;AAAA,IACjB,SACG;AAAA,MACC,MAAM;AAAA,MACN,SAAS;AAAA,QACP,SAAS;AAAA,QACT,SAAS;AAAA;AAAA;AAAA,IAGf,mBACG;AAAA,MACC,MAAM;AAAA,MACN,SAAS;AAAA,QACP,SAAS;AAAA,QACT,UAAU,mBAAmB;AAAA,QAC7B,SAAS;AAAA;AAAA;AAAA,IAGf;AAAA,MACE,MAAM;AAAA,MACN,SAAS,CAAC;AAAA;AAAA,IAEZ;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,QACA,UAAU,mBAAmB;AAAA,QAC7B;AAAA,QACA,SAAS;AAAA;AAAA;AAAA,IAGb,uBAAuB;AAAA,IACvB,OAAO,UACX;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAIJ,QAAM,SAAS,UAAU,wBAAwB,eAAe;AAAA,IAC9D;AAAA,IACA;AAAA;AAGF,QAAM,CAAC,YAAY,aAAa,UAAU;AAE1C,YAAU,MAAM;AACd,QAAI,aAAa;AACf,UAAI;AACF;AAAA,eACO,GAAP;AAAA;AAAA;AAAA,KAIH,CAAC,SAAS,aAAa,MAAM;AAEhC,MAAI,UAAU;AACZ,WAAO,SAAS;AAAA;AAGlB,QAAM,SAAS,CAAC,OAA2B;AACzC,UAAM,WAAY,MAAc;AAEhC,wBAAoB;AAEpB,QAAI,OAAO,aAAa,YAAY;AAClC,eAAS;AAAA,eACA,UAAU;AACnB,eAAS,UAAU;AAAA;AAAA;AAIvB,QAAM,aAAa,CAAC,OAA8B;AAChD,qBAAiB;AACjB,iBAAa,UAAU;AAAA;AAIzB,QAAM,eAAe,sBAAI,QAAU,OAAO;AAE1C,QAAM,OACJ,oCAAC,MAAD;AAAA,IACE,WAAQ;AAAA,KACJ,YAFN;AAAA,IAGE,kBAAkB;AAAA,IAClB,KAAK;AAAA,IACL,OAAO;AAAA,MACH,WAAW,SAEf,oCAAC,aAAD;AAAA,IACE,gBAAgB;AAAA,IAChB,WAAQ;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,KAEC,SAAS,oCAAC,cAAD;AAAA,IAAc,KAAK;AAAA,IAAiB,OAAO,OAAO;AAAA,MAC3D;AAKP,SACE,0DACG,SAAS,CAAC,uBAAuB,aAAa,OAAO,CAAC,KAAK,WAAW,SAAS,2DAE/E,QACC,0DACG,cAAc,oCAAC,QAAD,MAAS,OAEvB,CAAC,cAAc;AAAA;AAQ5B,QAAQ,cAAc;",
  "names": []
}
